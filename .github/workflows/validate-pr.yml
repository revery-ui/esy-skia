name: Validate Pull Request

on: [push, pull_request]

jobs:
  lint:
    name: Lint lockdir
    runs-on: macos-latest
    steps:
      - uses: actions/setup-node@v1.4.2
        with:
          node-version: 12
      - uses: actions/checkout@v2
      - name: Install esy
        run: npm install -g esy
      - name: Setup Git to push back
        run: |
          git remote set-url --push origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY
          git config user.name "Github Runner"
          git config user.email "runner@runner.github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update lockdir
        run: |
          esy install
          (git diff --exit-code --cached && git diff --exit-code) || (git add *lock; git commit -m "Update lockdir, ")
      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js
      - name: Try to restore dependencies cache
        id: deps-cache-macos
        uses: actions/cache@v1.1.2
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: macos-latest-${{ hashFiles('**/index.json') }}
          restore-keys: |
            macos-latest-
      - name: Build dependencies
        if: steps.deps-cache-macos.outputs.cache-hit != 'true'
        run: esy build-dependencies --release
      - name: Push if it is not up to date
        if: github.event_name != 'pull_request'
        run: |
          # if last commit is from the bot then push.
          [[ "$(git log -1 --pretty=format:'%an')" != "Github Runner" ]] || git push origin HEAD:$GITHUB_REF
      - name: Display status should be clean
        if: always()
        run: |
          git status
          git log -2
          git diff
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if (require("child_process").execSync("git log -1 --pretty=format:'%an'") == "Github Runner")
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "I have updated your lock dirs and formatted the code.\n" +
                  "Please @" + context.actor + " pull the last commit before pushing any more changes."
              });

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      # If we have many bug we can test on all plateform
      fail-fast: false
      matrix:
        os: [windows-2016, ubuntu-latest, macos-latest]
    steps:
      - uses: actions/setup-node@v1.4.2
        with:
          node-version: 12
      - uses: actions/checkout@v2
      - name: Install esy
        run: npm install -g esy
      - name: Install native dependencies on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-utils mesa-utils-extra ragel libgtk-3-dev nasm
      - name: Install dependencies
        run: esy install
      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js
      - name: Try to restore dependencies cache
        id: deps-cache
        uses: actions/cache@v1.1.2
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: |
            ${{ matrix.os }}-
      - name: Build dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: esy build-dependencies --release
      - name: Build
        run: esy build --release
      - name: Build test/dev dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          esy build-dependencies
          # We might have used restore-keys
          esy cleanup .
